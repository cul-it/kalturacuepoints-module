<?php
// $Id$

/**
 * @file
 * Support for CuePoints in Kaltura Videos
 */

//require_once(dirname(__FILE__) . "/kaltura_php5/KalturaClient.php");

/**
 * load kaltura stuff
 */
function kalturacuepoints_init() {
	//drupal_add_js(drupal_get_path("module", "kaltura") . "/js/kaltura_player_controller.js");
	//drupal_add_js(drupal_get_path("module", "kalturacuepoints") . "/kalturacuepoints.js");
}

/**
 * implementation of hook_field_display_node_alter()
 */
function kalturacuepoints_field_display_node_alter(&$display, $context) {
	//drupal_set_message('<pre>' . print_r($context, true) . '</pre>');
}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function kalturacuepoints_block_info() {
	$blocks['kalturacuepoints_block'] = array(
		'info' => t('Video Cue Points display'),
		'cache' => DRUPAL_CACHE_PER_PAGE,
	);
	return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function kalturacuepoints_block_configure($delta = '') {
  // The $delta parameter tells us which block is being configured.
  // In this example, we'll allow the administrator to customize
  // the text of the 'configurable text string' block defined in this module.

  $form = array();
  if ($delta == 'kalturacuepoints_block') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options
    // (block title, page visibility, etc.) and the save button.
    $form['kalturacuepoints_partnerid'] = array(
      '#type' => 'textfield',
      '#title' => t('Kaltura Partner ID'),
      '#size' => 60,
      '#description' => t('Kaltura Partner ID for the user eg. 111222.'),
      '#default_value' => variable_get('kalturacuepoints_partnerid',  ''),
    );
    $form['kalturacuepoints_subpartnerid'] = array(
      '#type' => 'textfield',
      '#title' => t('Kaltura Sub Partner ID'),
      '#size' => 60,
      '#description' => t('Kaltura Sub Partner ID for the user eg. 11122233.'),
      '#default_value' => variable_get('kalturacuepoints_subpartnerid',  ''),
    );
   $form['kalturacuepoints_playerid'] = array(
      '#type' => 'textfield',
      '#title' => t('Kaltura Player ID'),
      '#size' => 60,
      '#description' => t('Kaltura ID for the video player eg. 1112223.'),
      '#default_value' => variable_get('kalturacuepoints_playerid',  ''),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * This hook declares how the configured options for a block
 * provided by this module are saved.
 */
function kalturacuepoints_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'kalturacuepoints_block') {
    // Have Drupal save the string to the database.
    variable_set('kalturacuepoints_partnerid', $edit['kalturacuepoints_partnerid']);
    variable_set('kalturacuepoints_subpartnerid', $edit['kalturacuepoints_subpartnerid']);
    variable_set('kalturacuepoints_playerid', $edit['kalturacuepoints_playerid']);
  }
  return;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function kalturacuepoints_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'kalturacuepoints_block':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Video');
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = kalturacuepoints_contents($delta);
      break;
  }
  return $block;
}

/**
 * converts HH:MM:SS to seconds
 */
function kalturacuepoints_to_seconds($hhmmss) {
	$parts = explode(':', $hhmmss);
	$sec = array_pop($parts);
	$sec += array_pop($parts) * 60;
	$sec += array_pop($parts) * 60 * 60;
	return $sec;
}

/**
 * finds the currently selected language
 */
function kalturacuepoints_language() {
	global $language;
	return $language->language;
	}

/**
 * converts playtime cck field to seconds
 */
function kalturacuepoints_playtime($playtime) {
	/*
	The date field (playtime) has to be set up as UTC! All fields
	have to be stored in the database including seconds.
	The display is H:i:s. Drupal defaults the year/month/day
	to 0000-1-1 but we'll ignore that anyway.
	start date is in value, end date is in value2
	if no end date is specified it matches start date
	*/
	$return_sec = array('start' => 0, 'end' => false);
	if (isset($playtime['und'][0]['value'])) {
		$start = $playtime['und'][0]['value'];
		$hms = array_pop(explode(' ',$start));
		$return_sec['start'] = kalturacuepoints_to_seconds($hms);		
		$end = $playtime['und'][0]['value2'];
		if (strcmp($start,$end) != 0) {
			$hms = array_pop(explode(' ',$end));
			$return_sec['end'] = kalturacuepoints_to_seconds($hms);		
			}
		}
	return $return_sec;
}

/**
 * A module-defined block content function.
 */
function kalturacuepoints_contents($which_block) {
  switch ($which_block) {
	case 'kalturacuepoints_block':
		// detect the current node (block shows only on video and segment nodes or video-test view)
		$nid = FALSE;
		if (arg(0) == 'node' && is_numeric(arg(1)) && ! arg(2)) {
			$nid = arg(1);
			}
		else if (preg_match('/video-test\/([\d]+)$/',request_uri(), $matches)) {
			$nid = $matches[1];
			}
		else {
			drupal_set_message(request_uri());
			}
		if ($nid !== FALSE) {
  			$node = node_load($nid);
  			if ($node->type == 'video') {
  				$start_field = 'field_film_start';
  				$end_field = 'field_film_end';
  				if (isset($node->field_kaltura_entry_id['und'][0]['safe_value'])) {
  					$video_id = $node->field_kaltura_entry_id['und'][0]['safe_value'];
  					}
  				else {
  					return array( '#markup' => t('No video entry.'));
  					}
  				}
 			else if ($node->type == 'segment') {
  				$start_field = 'field_seg_start';
  				$end_field = 'field_seg_end';
  				$vnodeid = $node->field_seg_video['und'][0]['nid'];
  				$vnode = node_load($vnodeid);
  				if (isset($vnode->field_kaltura_entry_id['und'][0]['safe_value'])) {
  					$video_id = $vnode->field_kaltura_entry_id['und'][0]['safe_value'];
  					}
  				else {
  					return array( '#markup' => t('No video entry.'));
  					}
 				}
 			else {
 				return array( '#markup' => t('Only show kalturacuepoints block on video and segment nodes.'));
 				}
  			$language = kalturacuepoints_language();
			$title = isset($node->title_field["$language"][0]['safe_value']) ?
				$node->title_field["$language"][0]['safe_value'] : '';
			$description = isset($node->body["$language"][0]['safe_value']) ?
				$node->body["$language"][0]['safe_value'] : '';
				
			$time = kalturacuepoints_playtime($node->field_playtime);
			
			$code = array(
				'<div id="ctitle">Title ' . $time['start'] . '</div>',
				//'<ul id="chapters"><li><a id="cp2" data-chapterStartTime="1000" href="#">chapter 2</a></li></ul>',
				kalturacuepoints_player_embed_code($video_id, $title, $description, $time['start'], $time['end']),
				);
			$chaps = array( '#markup' => implode(PHP_EOL, $code));
			return $chaps;
			}
		break;
		}
}

function kalturacuepoints_player_embed_code($entry, $title, $description, 
	$start_sec = 0, $end_sec = false, 
	$partner = 518251, $sub_partner = 51825100, $player = 7929281 ) {
	// emit code for a kaltura player
	// $entry is the id of the asset like 1_t9lgbvo6
	$playrange = "mediaProxy.mediaPlayFrom=$start_sec";
	if ($end_sec !== false) {
		$playrange .= "&mediaProxy.mediaPlayTo=$end_sec";
		}
	$str = <<<EOD
<script type="text/javascript" 
	src="http://www.kaltura.com/p/$partner/sp/$sub_partner/embedIframeJs/uiconf_id/$player/partner_id/$partner">
	</script>
<object id="kaltura_player_1336413328" 
	name="kaltura_player_1336413328" 
	type="application/x-shockwave-flash" 
	allowFullScreen="true" 
	allowNetworking="all" 
	allowScriptAccess="always" 
	height="289" 
	width="400" 
	bgcolor="#000000" 
	xmlns:dc="http://purl.org/dc/terms/" 
	xmlns:media="http://search.yahoo.com/searchmonkey/media/" 
	rel="media:video" 
	resource="http://www.kaltura.com/index.php/kwidget/cache_st/1336413328/wid/_$partner/uiconf_id/$player/entry_id/$entry" 
	data="http://www.kaltura.com/index.php/kwidget/cache_st/1336413328/wid/_$partner/uiconf_id/$player/entry_id/$entry">
<param name="allowFullScreen" value="true" />
<param name="allowNetworking" value="all" />
<param name="allowScriptAccess" value="always" />
<param name="bgcolor" value="#000000" />
<param name="flashVars" value="streamerType=rtmp&$playrange&externalInterfaceDisabled=false&jsInterfaceReadyFunc=jsInterfaceReady" />
<param name="movie" 
	value="http://www.kaltura.com/index.php/kwidget/cache_st/1336413328/wid/_$partner/uiconf_id/$player/entry_id/$entry" />
<a rel="media:thumbnail" 
	href="http://cdnbakmi.kaltura.com/p/$partner/sp/$sub_partner/thumbnail/entry_id/$entry/width/120/height/90/bgcolor/000000/type/2">
	</a>
<span property="dc:description" 
	content="$description">
	</span>
<span property="media:title" 
	content="$title">
	</span>
<span property="media:width" 
	content="400">
	</span>
<span property="media:height" 
	content="289">
	</span>
<span property="media:type" 
	content="application/x-shockwave-flash">
	</span>
</object>
EOD;
	return $str;
}