<?php
// $Id$

/**
 * @file
 * Support for CuePoints in Kaltura Videos
 */

//require_once(dirname(__FILE__) . "/kaltura_php5/KalturaClient.php");

/**
 * load kaltura stuff
 */
function kalturacuepoints_init() {
	//drupal_add_js(drupal_get_path("module", "kaltura") . "/js/kaltura_player_controller.js");
	//drupal_add_js(drupal_get_path("module", "kalturacuepoints") . "/kalturacuepoints.js");
}

/**
 * implementation of hook_field_display_node_alter()
 */
function kalturacuepoints_field_display_node_alter(&$display, $context) {
	//drupal_set_message('<pre>' . print_r($context, true) . '</pre>');
}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function kalturacuepoints_block_info() {
	$blocks['kalturacuepoints_block'] = array(
		'info' => t('Video Cue Points display'),
		'cache' => DRUPAL_CACHE_PER_PAGE,
	);
	return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function kalturacuepoints_block_configure($delta = '') {
  // The $delta parameter tells us which block is being configured.
  // In this example, we'll allow the administrator to customize
  // the text of the 'configurable text string' block defined in this module.

  $form = array();
  if ($delta == 'kalturacuepoints_block') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options
    // (block title, page visibility, etc.) and the save button.
    $form['kalturacuepoints_partnerid'] = array(
      '#type' => 'textfield',
      '#title' => t('Kaltura Partner ID'),
      '#size' => 60,
      '#description' => t('Kaltura Partner ID for the user eg. 111222.'),
      '#default_value' => variable_get('kalturacuepoints_partnerid',  ''),
    );
    $form['kalturacuepoints_subpartnerid'] = array(
      '#type' => 'textfield',
      '#title' => t('Kaltura Sub Partner ID'),
      '#size' => 60,
      '#description' => t('Kaltura Sub Partner ID for the user eg. 11122233.'),
      '#default_value' => variable_get('kalturacuepoints_subpartnerid',  ''),
    );
   $form['kalturacuepoints_playerid'] = array(
      '#type' => 'textfield',
      '#title' => t('Kaltura Player ID'),
      '#size' => 60,
      '#description' => t('Kaltura ID for the video player eg. 1112223.'),
      '#default_value' => variable_get('kalturacuepoints_playerid',  ''),
    );
   $form['kalturacuepoints_player_width'] = array(
      '#type' => 'textfield',
      '#title' => t('Player Width in pixels'),
      '#size' => 60,
      '#description' => t('For the width and media:width of the embed code.'),
      '#default_value' => variable_get('kalturacuepoints_player_width',  '400'),
    );
   $form['kalturacuepoints_player_height'] = array(
      '#type' => 'textfield',
      '#title' => t('Player Height in pixels'),
      '#size' => 60,
      '#description' => t('For the height and media:height of the embed code.'),
      '#default_value' => variable_get('kalturacuepoints_player_height',  '289'),
    );
   $form['kalturacuepoints_entry_id_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Field name for Kalture Entry ID'),
      '#size' => 60,
      '#description' => t('Internal name for the field containing the Kaltura ID for a video.'),
      '#default_value' => variable_get('kalturacuepoints_entry_id_field',  'field_kaltura_entry_id'),
    );
   $form['kalturacuepoints_playtime_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Field name for segment start/stop times'),
      '#size' => 60,
      '#description' => t('Internal name for a Date field where the begin and end times are used to start and stop the video playback.'),
      '#default_value' => variable_get('kalturacuepoints_playtime_field',  'field_playtime'),
    );
   $form['kalturacuepoints_segment_video_reference_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Field name for segment video reference'),
      '#size' => 60,
      '#description' => t('Internal name for a Node Reference field that points to a video node from a segment node.'),
      '#default_value' => variable_get('kalturacuepoints_video_reference_field',  'field_seg_video'),
    );
   $form['kalturacuepoints_no_video_message_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Message to display when there is no video'),
      '#size' => 120,
      '#description' => t('When the block can not find a video to display show this.'),
      '#default_value' => variable_get('kalturacuepoints_no_video_message_field', t('Configure kalturacuepoints block field names or hide this block!'),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * This hook declares how the configured options for a block
 * provided by this module are saved.
 */
function kalturacuepoints_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'kalturacuepoints_block') {
    // Have Drupal save the string to the database.
    variable_set('kalturacuepoints_partnerid', $edit['kalturacuepoints_partnerid']);
    variable_set('kalturacuepoints_subpartnerid', $edit['kalturacuepoints_subpartnerid']);
    variable_set('kalturacuepoints_playerid', $edit['kalturacuepoints_playerid']);
    variable_set('kalturacuepoints_player_width', $edit['kalturacuepoints_player_width']);
    variable_set('kalturacuepoints_player_height', $edit['kalturacuepoints_player_height']);
    variable_set('kalturacuepoints_entry_id_field', $edit['kalturacuepoints_entry_id_field']);
    variable_set('kalturacuepoints_playtime_field', $edit['kalturacuepoints_playtime_field']);
    variable_set('kalturacuepoints_segment_video_reference_field',
      $edit['kalturacuepoints_segment_video_reference_field']);
    variable_set('kalturacuepoints_no_video_message_field', $edit['kalturacuepoints_no_video_message_field']);
  }
  return;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function kalturacuepoints_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'kalturacuepoints_block':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Video');
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = kalturacuepoints_contents($delta);
      break;
  }
  return $block;
}

/**
 * converts HH:MM:SS to seconds
 */
function kalturacuepoints_to_seconds($hhmmss) {
	$parts = explode(':', $hhmmss);
	$sec = array_pop($parts);
	$sec += array_pop($parts) * 60;
	$sec += array_pop($parts) * 60 * 60;
	return $sec;
}

/**
 * finds the currently selected language
 */
function kalturacuepoints_language() {
	global $language;
	return $language->language;
	}

/**
 * converts playtime cck field to seconds
 */
function kalturacuepoints_playtime($playtime) {
	/*
	The date field (playtime) has to be set up as UTC! All fields
	have to be stored in the database including seconds.
	The display is H:i:s. Drupal defaults the year/month/day
	to 0000-1-1 but we'll ignore that anyway.
	start date is in value, end date is in value2
	if no end date is specified it matches start date
	*/
	$return_sec = array('start' => 0, 'end' => false);
	if (isset($playtime['und'][0]['value'])) {
		$start = $playtime['und'][0]['value'];
		$hms = array_pop(explode(' ',$start));
		$return_sec['start'] = kalturacuepoints_to_seconds($hms);
		$end = $playtime['und'][0]['value2'];
		if (strcmp($start,$end) != 0) {
			$hms = array_pop(explode(' ',$end));
			$return_sec['end'] = kalturacuepoints_to_seconds($hms);
			}
		}
	return $return_sec;
}

/**
 * checks for a Kaltura video entry id
 */
function kalturecuepoints_get_entry_id($node) {
  $entry_id_field = variable_get('kalturacuepoints_entry_id_field',  'field_kaltura_entry_id');
  if (isset($node) &&
    isset($node->{$entry_id_field}) &&
    isset($node->{$entry_id_field}['und']) &&
    isset($node->{$entry_id_field}['und'][0]) &&
    isset($node->{$entry_id_field}['und'][0]['safe_value'])) {
    return $node->{$entry_id_field}['und'][0]['safe_value'];
  }
  return FALSE;
}

/**
 * checks for a video node reference
 */
function kalturacuepoints_get_video_reference($node) {
  $video_reference_field = variable_get('kalturacuepoints_video_reference_field',  'field_seg_video');
  if (isset($node) &&
    isset($node->$video_reference_field) &&
    isset($node->{$video_reference_field}['und']) &&
    isset($node->{$video_reference_field}['und'][0]) &&
    isset($node->{$video_reference_field}['und'][0]['nid'])) {
    $vnodeid = $node->{$video_reference_field}['und'][0]['nid'];
    $vnode = node_load($vnodeid);
    return kalturecuepoints_get_entry_id($vnode);
  }
  return FALSE;
}

/**
 * checks for a playtime field
 */
function kalturacuepoints_get_playtime($node) {
  $playtime_field = variable_get('kalturacuepoints_playtime_field',  'field_playtime');
  if ($node &&
    isset($node->{$playtime_field}) &&
    isset($node->{$playtime_field}['und']) &&
    isset($node->{$playtime_field}['und'][0]) &&
    isset($node->{$playtime_field}['und'][0]['value'])) {
    return kalturacuepoints_playtime($node->{$playtime_field});
  }
  return FALSE;
}

/**
 * A module-defined block content function.
 */
function kalturacuepoints_contents($which_block) {
  switch ($which_block) {
	case 'kalturacuepoints_block':
		// detect the current node (block shows only on video and segment nodes or video-test view)
		$nid = FALSE;
		if (arg(0) == 'node' && is_numeric(arg(1)) && ! arg(2)) {
			// when node is showing
			$nid = arg(1);
			}
		else if (preg_match('/\/([0-9]+)$/',request_uri(), $matches)) {
			// when a view is showing - assuming an argument is numeric!!!
			//$path = drupal_lookup_path('source', $matches[1]);
			//drupal_set_message('kalturacuepoints_contents: ' . print_r($path, true));
			$nid = $matches[1];
			}
		if ($nid !== FALSE && (($node = node_load($nid)) !== FALSE)) {
      // try to find a kaltura id field
      if (($video_id = kalturecuepoints_get_entry_id($node)) !== FALSE) {
        $time = array('start' => 0, 'end' => FALSE);
			}
 			elseif (($video_id = kalturacuepoints_get_video_reference($node)) !== FALSE) {
        if (($playtime = kalturacuepoints_get_playtime($node)) !== FALSE) {
          $time = $playtime;
        }
        else {
           $time = array('start' => 0, 'end' => FALSE);
        }
      }
     	else {
        $msg = variable_get('kalturacuepoints_no_video_message_field', t('Configure kalturacuepoints block field names or hide this block!');
   			return array( '#markup' => t($msg));
   		}

  		$language = kalturacuepoints_language();
			$title = isset($node->title_field["$language"][0]['safe_value']) ?
			   $node->title_field["$language"][0]['safe_value'] : '';
			$description = isset($node->body["$language"][0]['safe_value']) ?
			   $node->body["$language"][0]['safe_value'] : '';

			$code = array(
				'<div id="ctitle">' . $title . '</div>',
				kalturacuepoints_player_embed_code($video_id, $title, $description, $time['start'], $time['end'],
					variable_get('kalturacuepoints_partnerid',''),
					variable_get('kalturacuepoints_subpartnerid',''),
					variable_get('kalturacuepoints_playerid',''),
					variable_get('kalturacuepoints_player_width',''),
					variable_get('kalturacuepoints_player_height','')
					)
				);
			$chaps = array( '#markup' => implode(PHP_EOL, $code));
			return $chaps;
			}
		break;
		}
}

function kalturacuepoints_player_embed_code($entry, $title, $description,
  $start_sec = 0, $end_sec = false,
  $partner = 518251, $sub_partner = 51825100, $player = 9524271 /*7929281*/,
  $player_width = 400, $player_height = 289 ) {
  // emit code for a kaltura player
  // $entry is the id of the asset like 1_t9lgbvo6
  $playrange = "mediaProxy.mediaPlayFrom=$start_sec";
  if ($end_sec !== false) {
    $playrange .= "&mediaProxy.mediaPlayTo=$end_sec";
    }
  $str_old = <<<EOD
<script type="text/javascript"
  src="http://www.kaltura.com/p/$partner/sp/$sub_partner/embedIframeJs/uiconf_id/$player/partner_id/$partner">
  </script>
<object id="kaltura_player_1336413328"
  name="kaltura_player_1336413328"
  type="application/x-shockwave-flash"
  allowFullScreen="true"
  allowNetworking="all"
  allowScriptAccess="always"
  height="$player_height"
  width="$player_width"
  bgcolor="#000000"
  xmlns:dc="http://purl.org/dc/terms/"
  xmlns:media="http://search.yahoo.com/searchmonkey/media/"
  rel="media:video"
  resource="http://www.kaltura.com/index.php/kwidget/cache_st/1336413328/wid/_$partner/uiconf_id/$player/entry_id/$entry"
  data="http://www.kaltura.com/index.php/kwidget/cache_st/1336413328/wid/_$partner/uiconf_id/$player/entry_id/$entry">
<param name="allowFullScreen" value="true" />
<param name="allowNetworking" value="all" />
<param name="allowScriptAccess" value="always" />
<param name="bgcolor" value="#000000" />
<param name="flashVars" value="streamerType=rtmp&$playrange&externalInterfaceDisabled=false&jsInterfaceReadyFunc=jsInterfaceReady" />
<param name="movie"
  value="http://www.kaltura.com/index.php/kwidget/cache_st/1336413328/wid/_$partner/uiconf_id/$player/entry_id/$entry" />
<a rel="media:thumbnail"
  href="http://cdnbakmi.kaltura.com/p/$partner/sp/$sub_partner/thumbnail/entry_id/$entry/width/120/height/90/bgcolor/000000/type/2">
  </a>
<span property="dc:description"
  content="$description">
  </span>
<span property="media:title"
  content="$title">
  </span>
<span property="media:width"
  content="$player_width">
  </span>
<span property="media:height"
  content="$player_height">
  </span>
<span property="media:type"
  content="application/x-shockwave-flash">
  </span>
</object>
EOD;

  $playto = ($end_sec !== false) ? ', "mediaProxy.mediaPlayTo": "' . $end_sec . '"' : '';
  $str = <<<EOD
<script src="http://cdnapi.kaltura.com/p/$partner/sp/$sub_partner/embedIframeJs/uiconf_id/$player/partner_id/$partner"></script>
<div id="kaltura_player_1369763645" style="width: {$player_width}px; height: {$player_height}px;" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
<span itemprop="name" content="$title"></span>
<span itemprop="description" content="$description"></span>
<span itemprop="duration" content=""></span>
<span itemprop="thumbnail" content=""></span>
<span itemprop="width" content="640"></span>
<span itemprop="height" content="385"></span>
<a href="http://corp.kaltura.com/products/video-platform-features">Video Platform</a>
<a href="http://corp.kaltura.com/Products/Features/Video-Management">Video Management</a>
<a href="http://corp.kaltura.com/Video-Solutions">Video Solutions</a>
<a href="http://corp.kaltura.com/Products/Features/Video-Player">Video Player</a></div>
<script>
mw.setConfig('EmbedPlayer.EnableIpadHTMLControls', true );
mw.setConfig( 'EmbedPlayer.NativeControlsMobileSafari', false );
mw.setConfig( 'KalturaSupport.LeadWithHTML5', true );
kWidget.embed({
  "targetId": "kaltura_player_1369763645",
  "wid": "_518251",
  "uiconf_id": $player,
  "flashvars": {
    "akamaiHD": {
      "loadingPolicy": "preInitialize",
      "asyncInit": "true"
    },
    "streamerType": "hdnetwork",
    "mediaProxy.mediaPlayFrom": "$start_sec" $playto
  },
  "cache_st": 1369763645,
  "entry_id": "$entry"
});
</script>
EOD;
$str2 = <<<EOD
<div id="kaltura_player_1369838100" style="width: {$player_width}px; height: {$player_height}px;" itemprop="video" itemscope itemtype="http://schema.org/VideoObject">
<span itemprop="name" content="$title"></span>
<span itemprop="description" content="$description"></span>
<span itemprop="duration" content=""></span>
<span itemprop="thumbnail" content=""></span>
<span itemprop="width" content="$player_width"></span>
<span itemprop="height" content="$player_height"></span>
<a href="http://corp.kaltura.com/products/video-platform-features">Video Platform</a>
<a href="http://corp.kaltura.com/Products/Features/Video-Management">Video Management</a>
<a href="http://corp.kaltura.com/Video-Solutions">Video Solutions</a>
<a href="http://corp.kaltura.com/Products/Features/Video-Player">Video Player</a></div>
<script src="http://cdnapi.kaltura.com/p/$partner/sp/$sub_partner/embedIframeJs/uiconf_id/$player/partner_id/$partner?autoembed=true&entry_id=$entry&playerId=kaltura_player_1369838100&cache_st=1369838100&width=$player_width&height=$player_height&flashvars[akamaiHD.loadingPolicy]=preInitialize&flashvars[akamaiHD.asyncInit]=true&flashvars[twoPhaseManifest]=true&flashvars[streamerType]=hdnetworkmanifest"></script>
EOD;
  return $str;
}

